/*
 * This file is generated by jOOQ.
 */
package org.jooq.codegen.maven.example.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.codegen.maven.example.tables.Employees;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmployeesRecord extends UpdatableRecordImpl<EmployeesRecord> implements Record4<Integer, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.employees.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.employees.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.employees.post</code>.
     */
    public void setPost(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.employees.post</code>.
     */
    public String getPost() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.employees.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.employees.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.employees.filial</code>.
     */
    public void setFilial(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.employees.filial</code>.
     */
    public String getFilial() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Employees.EMPLOYEES.ID;
    }

    @Override
    public Field<String> field2() {
        return Employees.EMPLOYEES.POST;
    }

    @Override
    public Field<String> field3() {
        return Employees.EMPLOYEES.NAME;
    }

    @Override
    public Field<String> field4() {
        return Employees.EMPLOYEES.FILIAL;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getPost();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public String component4() {
        return getFilial();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getPost();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public String value4() {
        return getFilial();
    }

    @Override
    public EmployeesRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public EmployeesRecord value2(String value) {
        setPost(value);
        return this;
    }

    @Override
    public EmployeesRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public EmployeesRecord value4(String value) {
        setFilial(value);
        return this;
    }

    @Override
    public EmployeesRecord values(Integer value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EmployeesRecord
     */
    public EmployeesRecord() {
        super(Employees.EMPLOYEES);
    }

    /**
     * Create a detached, initialised EmployeesRecord
     */
    public EmployeesRecord(Integer id, String post, String name, String filial) {
        super(Employees.EMPLOYEES);

        setId(id);
        setPost(post);
        setName(name);
        setFilial(filial);
    }
}
