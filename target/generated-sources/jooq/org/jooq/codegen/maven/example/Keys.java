/*
 * This file is generated by jOOQ.
 */
package org.jooq.codegen.maven.example;


import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.codegen.maven.example.tables.Databasechangeloglock;
import org.jooq.codegen.maven.example.tables.Employees;
import org.jooq.codegen.maven.example.tables.Filials;
import org.jooq.codegen.maven.example.tables.Posts;
import org.jooq.codegen.maven.example.tables.Tasks;
import org.jooq.codegen.maven.example.tables.records.DatabasechangeloglockRecord;
import org.jooq.codegen.maven.example.tables.records.EmployeesRecord;
import org.jooq.codegen.maven.example.tables.records.FilialsRecord;
import org.jooq.codegen.maven.example.tables.records.PostsRecord;
import org.jooq.codegen.maven.example.tables.records.TasksRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<DatabasechangeloglockRecord> DATABASECHANGELOGLOCK_PKEY = Internal.createUniqueKey(Databasechangeloglock.DATABASECHANGELOGLOCK, DSL.name("databasechangeloglock_pkey"), new TableField[] { Databasechangeloglock.DATABASECHANGELOGLOCK.ID }, true);
    public static final UniqueKey<EmployeesRecord> EMPLOYEES_PKEY = Internal.createUniqueKey(Employees.EMPLOYEES, DSL.name("employees_pkey"), new TableField[] { Employees.EMPLOYEES.ID }, true);
    public static final UniqueKey<FilialsRecord> FILIALS_PKEY = Internal.createUniqueKey(Filials.FILIALS, DSL.name("filials_pkey"), new TableField[] { Filials.FILIALS.ID }, true);
    public static final UniqueKey<PostsRecord> POSTS_PKEY = Internal.createUniqueKey(Posts.POSTS, DSL.name("posts_pkey"), new TableField[] { Posts.POSTS.ID }, true);
    public static final UniqueKey<TasksRecord> TASKS_PKEY = Internal.createUniqueKey(Tasks.TASKS, DSL.name("tasks_pkey"), new TableField[] { Tasks.TASKS.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<EmployeesRecord, EmployeesRecord> EMPLOYEES__EMPLOYEES_CHIEFID_FKEY = Internal.createForeignKey(Employees.EMPLOYEES, DSL.name("employees_chiefid_fkey"), new TableField[] { Employees.EMPLOYEES.CHIEFID }, Keys.EMPLOYEES_PKEY, new TableField[] { Employees.EMPLOYEES.ID }, true);
    public static final ForeignKey<EmployeesRecord, FilialsRecord> EMPLOYEES__FILIALS_FK = Internal.createForeignKey(Employees.EMPLOYEES, DSL.name("filials_fk"), new TableField[] { Employees.EMPLOYEES.FILIALID }, Keys.FILIALS_PKEY, new TableField[] { Filials.FILIALS.ID }, true);
    public static final ForeignKey<EmployeesRecord, PostsRecord> EMPLOYEES__POSTS_FK = Internal.createForeignKey(Employees.EMPLOYEES, DSL.name("posts_fk"), new TableField[] { Employees.EMPLOYEES.POSTID }, Keys.POSTS_PKEY, new TableField[] { Posts.POSTS.ID }, true);
    public static final ForeignKey<TasksRecord, EmployeesRecord> TASKS__TASKS_EMPLOYEEID_FKEY = Internal.createForeignKey(Tasks.TASKS, DSL.name("tasks_employeeid_fkey"), new TableField[] { Tasks.TASKS.EMPLOYEEID }, Keys.EMPLOYEES_PKEY, new TableField[] { Employees.EMPLOYEES.ID }, true);
}
